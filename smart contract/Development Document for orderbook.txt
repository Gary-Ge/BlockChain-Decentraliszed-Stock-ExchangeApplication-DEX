OrderBook Development Document

1. Key Variables and Structs

- Order: This struct represents an order in the order book. It contains the trader's Ethereum address, the name of the stock, the price and quantity of the order, and a timestamp for when the order was placed.

- buyOrders and sellOrders: These are dynamic arrays that hold all buy and sell orders respectively. Each order is stored as an instance of the Order struct.

- userRegister and stockExchange: These are instances of the User_register and StockExchange contracts. They allow the OrderBook contract to interact with users and stocks on the platform.

2. Key Functions

- placeBuyOrder and placeSellOrder: These functions allow traders to place buy and sell orders respectively. The functions accept the name of the stock, the price, and the quantity as arguments. The orders are stored in the 'buyOrders' and 'sellOrders' arrays. After placing an order, the 'matchOrders' function is called to try and match any outstanding orders.

- matchOrders: This function is called whenever a new order is placed. It goes through the 'buyOrders' and 'sellOrders' arrays to find matching orders. In this simplified implementation, it only checks the first buy order and the first sell order. If the price of the buy order is greater than or equal to the price of the sell order, it matches the orders. The quantity of the matched order is the smaller of the quantities of the two orders. The function then emits an OrderMatched event with the details of the matched order.

1. Check if there are any buy and sell orders in the order book.
2. If there are, get the first buy and sell order.
3. Check if the price of the buy order is greater than or equal to the price of the sell order. If it is, match the orders.
4. Calculate the quantity of the matched order as the smaller of the two quantities.
5. Emit an OrderMatched event with the details of the matched order.
6. Reduce the quantities of the matched orders by the matched quantity.
7. If an order's quantity reaches zero, remove it from the order book.

- removeBuyOrder and removeSellOrder: These functions remove an order from the 'buyOrders' and 'sellOrders' arrays respectively. They shift all orders after the removed order down one position in the array and then reduce the size of the array by one.

3. Working Logic

When a trader places a buy or sell order, the order details are stored in the 'buyOrders' or 'sellOrders' array. The 'matchOrders' function is then called to try and match the new order with an existing order.

The 'matchOrders' function checks the first buy and sell order in the order book. If the price of the buy order is greater than or equal to the price of the sell order, it matches the orders. The quantity of the matched order is the smaller of the two quantities. An OrderMatched event is then emitted with the details of the matched order.

If an order is matched, its quantity is reduced by the matched quantity. If the order's quantity reaches zero, it is removed from the order book.
